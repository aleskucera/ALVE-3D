#!/bin/bash

#SBATCH --nodes=1                             # 1 node
#SBATCH --ntasks-per-node=4                   # 4 CPUs per node
#SBATCH --time=12:00:00                       # time limits: 12 hours
#SBATCH --error=myJob.err                     # standard error file
#SBATCH --output=myJob.out                    # standard output file
#SBATCH --partition=amd                       # partition name
#SBATCH --mail-user=kuceral4@fel.cvut.cz      # where send info about job
#SBATCH --mail-type=BEGIN,END,FAIL            # what to send, valid type values are NONE, BEGIN, END, FAIL, REQUEUE, ALL

# Set default values for variables
objects="voxels"
percentage="0.5"
criterion="random"
dataset_size="null"
action="select_voxels"
expected_percentage="0"

# Define a function to display help information
show_help () {
  echo "Usage: select.batch [options]"
  echo "Options:"
  echo "  --first-selection     Select first voxels"
  echo "  -c, --criterion       Active learning criterion (default: random)"
  echo "  -e, --expected        Expected percentage of labeled data (default: 0)"
  echo "  -o, --objects         Active learning objects (default: voxels)"
  echo "  -p, --percentage      Percentage of dataset to select (default: 0.5)"
  echo "  -s, --size            Dataset size (default: null)"
  echo "  -h, --help            Display this help and exit"
}

# Parse command line arguments
while [ "$#" -gt 0 ]; do
  case $1 in
    --first-selection) action="select_first_voxels" ;;
    -c|--criterion) criterion="$2"; shift ;;
    -e|--expected) expected_percentage="$2"; shift ;;
    -o|--objects) objects="$2"; shift ;;
    -p|--percentage) percentage="$2"; shift ;;
    -s|--size) dataset_size="$2"; shift ;;
    -h|--help) show_help; exit 0 ;;
    *) echo "Unknown parameter passed: $1"; exit 1 ;;
  esac
  shift
done

singularity run --nv --bind /mnt --env WANDB_API_KEY=c54dade10e3c04fca21bf96016298e59b1e030ae \
                singularity/alve-3d.sif python main.py \
                action="$action" \
                active.criterion="$criterion" \
                active.selection_objects="$objects" \
                train.dataset_size="$dataset_size" \
                active.select_percentage="$percentage" \
                active.expected_percentage_labeled="$expected_percentage"
